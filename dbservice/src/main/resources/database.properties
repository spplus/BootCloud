
# 连接池属性
driver-name=com.mysql.jdbc.Driver
pool.init-size=5
pool.min-idle=5
pool.max-active=20
pool.max-wait=60000
pool.time-between-eviction-runs-millis=60000
pool.min-evictable-idle-time-millis=300000
pool.validation-query=SELECT 'x'
pool.test-while-idle=true
pool.test-on-borrow=false
pool.test-on-return=false
pool.pool-prepared-statements=false
pool.max-pool-prepared-statement-per-connection-size=-1


# 数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# DB1
spring.datasource.druid.url=jdbc:mysql://localhost:3300/ssb_test
spring.datasource.druid.driver-class-name=${driver-name}
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=${pool.init-size}
spring.datasource.druid.min-idle=${pool.min-idle}
spring.datasource.druid.max-active=${pool.max-active}
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=${pool.max-wait}
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=${pool.time-between-eviction-runs-millis}
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=${pool.min-evictable-idle-time-millis}
#检测连接是否有效的sql
spring.datasource.druid.validation-query=${pool.validation-query}
spring.datasource.druid.test-while-idle=${pool.test-while-idle}
spring.datasource.druid.test-on-borrow=${pool.test-on-borrow}
spring.datasource.druid.test-on-return=${pool.test-on-return}
# PSCache Mysql下建议关闭
spring.datasource.druid.pool-prepared-statements=${pool.pool-prepared-statements}
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=${pool.max-pool-prepared-statement-per-connection-size}

# DB2
spring.datasource.druid.db2.url=jdbc:mysql://localhost:3300/ssb_test2
spring.datasource.druid.db2.driver-class-name=${driver-name}
spring.datasource.druid.db2.username=root
spring.datasource.druid.db2.password=123456
# 初始化大小，最小，最大
spring.datasource.druid.db2.initial-size=${pool.init-size}
spring.datasource.druid.db2.min-idle=${pool.min-idle}
spring.datasource.druid.db2.max-active=${pool.max-active}
# 配置获取连接等待超时的时间
spring.datasource.druid.db2.max-wait=${pool.max-wait}
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.db2.time-between-eviction-runs-millis=${pool.time-between-eviction-runs-millis}
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.db2.min-evictable-idle-time-millis=${pool.min-evictable-idle-time-millis}
#检测连接是否有效的sql
spring.datasource.druid.db2.validation-query=${pool.validation-query}
spring.datasource.druid.db2.test-while-idle=${pool.test-while-idle}
spring.datasource.druid.db2.test-on-borrow=${pool.test-on-borrow}
spring.datasource.druid.db2.test-on-return=${pool.test-on-return}
# PSCache Mysql下建议关闭
spring.datasource.druid.db2.pool-prepared-statements=${pool.pool-prepared-statements}
spring.datasource.druid.db2.max-pool-prepared-statement-per-connection-size=${pool.max-pool-prepared-statement-per-connection-size}


# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#mybatis
#entity扫描的包名
mybatis.type-aliases-package=com.spplus.bootcm.bean
#Mapper.xml所在的位置
mybatis.mapper-locations=classpath*:/mybatis/*Mapper.xml
#开启MyBatis的二级缓存
mybatis.configuration.cache-enabled=false

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


#启动项目后访问 http://127.0.0.1:${server.port}/druid
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
#缺省sessionStatMaxCount是1000个
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
#关闭session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=false
#配置principalSessionName，使得druid能够知道当前的session的用户是谁
#如果你session中保存的是非string类型的对象，需要重载toString方法
spring.datasource.druid.web-stat-filter.principalSessionName=xxx.user
#如果user信息保存在cookie中，你可以配置principalCookieName，使得druid知道当前的user是谁
spring.datasource.druid.web-stat-filter.principalCookieName=xxx.user
#druid 0.2.7版本开始支持profile，配置profileEnable能够监控单个url调用的sql列表。
spring.datasource.druid.web-stat-filter.profile-enable=false

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.urlPattern=/druid/*
#禁用HTML页面上的“Reset All”功能
spring.datasource.druid.stat-view-servlet.resetEnable=false
#用户名
spring.datasource.druid.stat-view-servlet.loginUsername=admin
#密码
spring.datasource.druid.stat-view-servlet.loginPassword=admin
#IP白名单(没有配置或者为空，则允许所有访问)
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,192.168.0.231
#IP黑名单 (存在共同时，deny优先于allow)
spring.datasource.druid.stat-view-servlet.deny=192.168.0.250

